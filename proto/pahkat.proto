syntax = "proto3";

package pahkat;

message NotificationResponse {
    oneof value {
        string message = 1;
    }
}

message SelfUpdateRequest {

}

message SelfUpdateResponse {

}

message NotificationsRequest {

}


message StatusRequest {
    string package_id = 1;
    uint32 target = 2;
}

message StatusResponse {
    sint32 value = 1;
}

message RepositoryIndexesRequest {}

message RepositoryIndexesResponse {
    repeated bytes repositories = 1;
}

message PackageAction {
    string id = 1;
    uint32 action = 2;
    uint32 target = 3;
}

message TransactionRequest {
    repeated PackageAction actions = 1;
}

message TransactionResponse {
    message DownloadProgress {
        string package_id = 1;
        uint64 current = 2;
        uint64 total = 3;
    }
    message DownloadError {
        string package_id = 1;
        string error = 2;
    }
    message DownloadComplete {
        string package_id = 1;
    }
    message InstallProgress {
        string package_id = 1;
        uint64 current = 2;
        uint64 total = 3;
        string message = 4;
    }
    message InstallStarted {
        string package_id = 1;
    }
    message InstallError {
        string package_id = 1;
        string error = 2;
    }
    message TransactionStarted {}
    message TransactionComplete {}

    oneof value {
        TransactionStarted transaction_started = 2;
        TransactionComplete transaction_complete = 3;
        DownloadProgress download_progress = 10;
        DownloadError download_error = 11;
        DownloadComplete download_complete = 12;
        InstallProgress install_progress = 13;
        InstallStarted install_started = 14;
        InstallError install_error = 15;
    }
}

message RefreshRequest {}

message RefreshResponse {}

message ClearCacheRequest {}

message ClearCacheResponse {}

service Pahkat {
    rpc Notifications(NotificationsRequest) returns (stream NotificationResponse) {}
    // rpc SelfUpdate(SelfUpdateRequest) returns (stream SelfUpdateResponse) {}

    // Store
    rpc Status(StatusRequest) returns (StatusResponse) {}
    // rpc RepositoryIndexes(RepositoryIndexesRequest) returns (RepositoryIndexesResponse) {}
    rpc ProcessTransaction(TransactionRequest) returns (stream TransactionResponse) {}
    // rpc Refresh(RefreshRequest) returns (RefreshResponse) {}
    // rpc ClearCache(ClearCacheRequest) returns (ClearCacheResponse) {}
    
    // Config
    // CRUD for repositories
    // autoupdate settings
}